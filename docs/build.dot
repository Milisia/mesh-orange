#
# Outline how the build process works
#

digraph g{

    subgraph cluster_debian {
        debian [shape=plaintext];
        graph[style=dotted];
        color=blue;

        debian_repo [shape=folder];
        package_list [shape=note];
        delete_list [shape=note];
        fixup_list [shape=note];
        add_files [shape=note];
        debian_initrd [shape=box3d];

        debian_repo -> multistrap -> minimise -> fixup -> customise;

        package_list -> multistrap;
        delete_list -> minimise;
        fixup_list -> fixup;
        add_files -> customise;

        customise -> debian_initrd;
    }
    
    subgraph cluster_kernel {
        kernel [shape=plaintext];
        graph[style=dotted];
        color=blue;

        kernel_config [shape=note];
        mainline_source [shape=folder];
        kernel_patches [shape=folder];
        kernel_source [shape=folder];
        kernel_image [shape=box3d];
        modules [shape=folder];
        dtb [shape=folder];

        kernel_patches -> kernel_source;
        mainline_source -> kernel_source;
        kernel_source -> kernel_build;
        kernel_config -> kernel_build;

        kernel_build -> github_release -> kernel_image;
        github_release -> modules;
        github_release -> dtb;
    }

    upstream_firmware [shape=folder];
    firmware [shape=folder];
    upstream_firmware -> firmware;

    cjdns_deb [shape=folder];
    cjdns_extract [shape=folder];
    cjdns_deb -> cjdns_extract;

    subgraph cluster_boot {
        boot [shape=plaintext];
        graph[style=dotted];
        color=blue;

        initrd [shape=box3d];
        conf_d [label="conf.d" shape=folder];
        spl [shape=note];
        uboot [shape=note];
        uboot_config [shape=folder];

        spl -> disk_image;
        uboot -> disk_image;
        uboot_config -> disk_image;
        initrd -> disk_image;
        conf_d -> disk_image;
        dtb -> disk_image;
    }

    firmware -> initrd;
    debian_initrd -> initrd;
    modules -> initrd;
    cjdns_extract -> initrd;
    kernel_image -> disk_image;

    disk_image [shape=box3d];
    sdcard [shape=folder];
    disk_image -> sdcard;
}

