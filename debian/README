Debian ramdisk builder
----------------------

This directory contains an auto-build system for making a minimal Debian
system, suitable for including in a ramdisk.  It is tested and known to
build when run on a Debian system.  It requires that you are running a
system with the apt and dpkg software.  See below for building on Ubuntu.

It currently only creates a very minimal debian system, however it is
intended that additional configuration can be added for specific use
cases (see the Configuring section, below)

Usage:

    make build-depends          # install needed build packages

    make build/debian.stretch.armhf.cpio  # creates the root filesystem archive

After making sure the needed packages are installed, you just need to
run the full build.  The resulting image can be used to build a ramdisk
install - see the boards directory for various builders

Configuring
-----------

The various fixups and customisation that are applied to the basic Debian
installation can be seen in the packages.d directory (See the README
in that dir for more details on the layout of that directory).

To customise the system built for differing use cases, it is possible to
add a "config overlay".  This consists of a directory which optionally
contains both a "packages.txt" file containing a list of additional
packages and a "packages.d" subdirectory - processed just like the
packages.d dir seen in the same dir as this README.

To activate one or more config overlays, ensure that your environment has
exported a "CONFIGDIRS" variable - this variable is a list of the
directories to search for the overlays.  Configuration will be applied in
the order listed in this variable and the directories will be interpreted
relative to the builder directory - so use fully qualified pathnames to
ensure correctness.  Finally, the normal directory is only searched if it
is included in this list.

E.G:
To enable the normal processing and add one overlay after it:

    export CONFIGDIRS=". /tmp/buildoverlay"
    make build/debian.stretch.armhf.cpio

It is expected that this build system will be embedded in a larger system
and used as a tool - thus the larger build system will set the CONFIGDIRS
variable correctly.

Building on Ubuntu
------------------

During building, all downloaded Debian packages are verified before use.  This
verification requires the Debian keyring to work.  When using Ubuntu, the
Debian keyring is not installed by default.  The following command will install
the Debian keyring package and allow the verification:

    sudo apt-get install debian-archive-keyring

Note:  Ubuntu 14.04 is shipping a broken version of multistrap (version
2.2.0), and will fail with compile errors.  The fix for this appears to
be to edit the line in /usr/sbin/multistrap that has error (line 989 in
v2.2.0) and remove any occurance to "$forceyes".

TODO
----

A quick list of things that probably need doing:
(sorted vaguely by importance)

* Ensure ssh keys are not saved in image and are regenerated if needed
* Complete the config load and config save scripts
* Add some extra randomness into image
* Load any extra randomness found on boot media
* Check all the available 802.11s flags and use the appropropriate ones
* use a known prefix for tunnel names to allow stable iptables rules and
  coexistance with other tunnel systems
* Write script for generating a basic config file to merge with image
* Use a better default access point name and PSK
* Use a better default root password
* Look for better options for the cjdns package
* look for a IPFS package
* u-boot rules to boot of one or the other of the initramfs images on fallback
* maybe add udev persistent-net-generator.rules - style network interface naming
* config storage - what about SPI flash?
